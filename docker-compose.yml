---
version: '3.8'

volumes:
  zeebe_data:
  zeebe_elasticsearch_data:

services:

# Core kafka services
  zookeeper-1:
    image: confluentinc/cp-zookeeper:5.5.1
    ports:
      - '32181:32181'
    environment:
      ZOOKEEPER_CLIENT_PORT: 32181
      ZOOKEEPER_TICK_TIME: 2000

  kafka-1:
    image: confluentinc/cp-kafka:5.5.1
    ports:
      - '9092:9092'
    depends_on:
      - zookeeper-1
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper-1:32181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_ADVERTISED_HOST_NAME: localhost
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka-1:29092,EXTERNAL://localhost:9092
      KAFKA_DEFAULT_REPLICATION_FACTOR: 1
      KAFKA_NUM_PARTITIONS: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

#Zeebe
  zeebe:
    image: camunda/zeebe:1.3.5
    environment:
      - ZEEBE_LOG_LEVEL=debug
    ports:
      - "26500:26500"
      - "9600:9600"
    volumes:
      - zeebe_data:/usr/local/zeebe/data
      - ./zeebe/zeebe-application.yml:/usr/local/zeebe/config/application.yaml
    depends_on:
      - elasticsearch
  operate:
    image: camunda/operate:1.3.5
    ports:
      - "8079:8080"
    depends_on:
      - zeebe
      - elasticsearch
    volumes:
      - ./zeebe/operate-application.yml:/usr/local/operate/config/application.yml
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.16.3
    ports:
      - "9200:9200"
    environment:
      - discovery.type=single-node
      - cluster.name=elasticsearch
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - xpack.security.enabled=false
    volumes:
      - zeebe_elasticsearch_data:/usr/share/elasticsearch/data

#Settle-o-matic application services
  client-gateway:
    build:
      context: ./client-gateway
      dockerfile: ../Dockerfile.springboot
    image: client-gateway
    ports:
    - 8080:8080
    depends_on:
      - kafka-1
    container_name: client-gateway
    environment:
      SPRING_APPLICATION_JSON: '{ "spring.kafka.bootstrap-servers": "kafka-1:29092" }'

  settlement-manager:
    build:
      context: ./settlement-manager
      dockerfile: ../Dockerfile.springboot
    image: settlement-manager
    ports:
    - 8081:8081
    depends_on:
      - kafka-1
    container_name: settlement-manager
    environment:
      SPRING_APPLICATION_JSON: '{ "spring.kafka.bootstrap-servers": "kafka-1:29092" }'

  som-console:
    build:
      context: ./som-console
      dockerfile: ./Dockerfile
    image: som-console
    ports:
      - 8888:80
    depends_on:
      - client-gateway
      - settlement-manager
    container_name: som-console
    environment:
      API_URL: http://localhost:8080
      API_WEBSOCKET: ws://localhost:8080

